{
  "version": 3,
  "sources": ["select-option.ts"],
  "sourcesContent": ["import type { CSSResultGroup, TemplateResult } from 'lit';\nimport type { SelectSize } from './select.js';\nimport type { FormControlValue } from '@sl-design-system/shared';\nimport { observe } from '@sl-design-system/shared';\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport styles from './select-option.scss.js';\n\nexport class SelectOption extends LitElement {\n  /** @private */\n  static override styles: CSSResultGroup = styles;\n\n  /** @ignore The size of the select, is set by the select component. */\n  @property({ reflect: true }) size: SelectSize = 'md';\n\n  /** @ignore Whether the content of the option item is a node*/\n  @property({ reflect: true }) contentType?: 'string' | 'element';\n\n  /** The value for the option item, to be used in forms.*/\n  @property() value?: FormControlValue;\n\n  /** Whether the option item is selected. */\n  @property({ reflect: true, type: Boolean }) selected = false;\n\n  /** Whether the option item is disabled. */\n  @property({ reflect: true, type: Boolean }) disabled = false;\n\n  /** @ignore Apply accessible attributes and values to the option. Observe the selected property if it changes */\n  @observe('selected')\n  protected handleSelectionChange(): void {\n    this.setAttribute('aria-selected', this.selected ? 'true' : 'false');\n    this.setAttribute('aria-disabled', this.disabled ? 'true' : 'false');\n  }\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n    this.setAttribute('role', 'option');\n  }\n\n  override render(): TemplateResult {\n    return html`<slot @slotchange=${this.#onSlotchange}></slot>`;\n  }\n\n  async #onSlotchange(event: Event & { target: HTMLSlotElement }): Promise<void> {\n    this.contentType = event.target.assignedNodes()[0].nodeType === 1 ? 'element' : 'string';\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAGA,SAAS,eAAe;AACxB,SAAS,YAAY,YAAY;AACjC,SAAS,gBAAgB;AACzB,OAAO,YAAY;AAEZ,aAAM,qBAAqB,WAAW;AAAA,EAAtC;AAAA;AAmCL,uBAAM;AA9BuB,gBAAmB;AASJ,oBAAW;AAGX,oBAAW;AAAA;AAAA,EAI7C,wBAA8B;AACtC,SAAK,aAAa,iBAAiB,KAAK,WAAW,SAAS,OAAO;AACnE,SAAK,aAAa,iBAAiB,KAAK,WAAW,SAAS,OAAO;AAAA,EACrE;AAAA,EAES,oBAA0B;AACjC,UAAM,kBAAkB;AACxB,SAAK,aAAa,QAAQ,QAAQ;AAAA,EACpC;AAAA,EAES,SAAyB;AAChC,WAAO,yBAAyB,sBAAK;AAAA,EACvC;AAKF;AAHQ;AAAA,kBAAa,eAAC,OAA2D;AAC7E,OAAK,cAAc,MAAM,OAAO,cAAc,EAAE,CAAC,EAAE,aAAa,IAAI,YAAY;AAClF;AAAA;AArCW,aAEK,SAAyB;AAGZ;AAAA,EAA5B,SAAS,EAAE,SAAS,KAAK,CAAC;AAAA,GALhB,aAKkB;AAGA;AAAA,EAA5B,SAAS,EAAE,SAAS,KAAK,CAAC;AAAA,GARhB,aAQkB;AAGjB;AAAA,EAAX,SAAS;AAAA,GAXC,aAWC;AAGgC;AAAA,EAA3C,SAAS,EAAE,SAAS,MAAM,MAAM,QAAQ,CAAC;AAAA,GAd/B,aAciC;AAGA;AAAA,EAA3C,SAAS,EAAE,SAAS,MAAM,MAAM,QAAQ,CAAC;AAAA,GAjB/B,aAiBiC;AAIlC;AAAA,EADT,QAAQ,UAAU;AAAA,GApBR,aAqBD;",
  "names": []
}
